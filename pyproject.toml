[project]
name = "trackers"
version = "2.0.0rc0"
description = "A unified library for object tracking featuring clean room re-implementations of leading multi-object tracking algorithms"
readme = "README.md"
authors = [
    {name = "Piotr Skalski", email = "piotr.skalski92@gmail.com"},
    {name = "Soumik Rakshit", email = "soumik@roboflow.com"},
]
license = {text = "Apache License 2.0"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]
keywords = ["tracking","mot","sort","deepsort", "machine-learning", "deep-learning", "vision", "ML", "DL", "AI", "DETR", "YOLO", "Roboflow"]

dependencies = [
    "firerequests>=0.1.2",
    "numpy>=2.0.2",
    "supervision>=0.25.1",
]

[project.optional-dependencies]
cpu = [
    "torch>=2.6.0",
    "torchvision>=0.21.0",
]
cu124 = [
    "torch>=2.6.0",
    "torchvision>=0.21.0",
]

deepsort = [
    "scipy>=1.13.1",
    "timm>=1.0.15",
    "validators>=0.34.0",
]

[dependency-groups]
dev = [
    "uv>=0.4.20",
    "pytest>=8.3.3",
    "ruff>=0.6.9",
    "bandit>=1.8.3",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
]

docs = [
    "jupyter>=1.1.1",
    "mkdocs>=1.6.1",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-material>=9.6.11",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocstrings>=0.29.1",
    "mkdocstrings-python>=1.16.10",
    "mike>=2.1.3",
]

build = [
    "twine>=5.1.1",
    "wheel>=0.40",
    "build>=0.10"
]


[tool.uv]
conflicts = [
    [
        { extra = "cpu" },
        { extra = "cu124" },
    ],
]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", extra = "cpu" },
    { index = "pytorch-cu124", extra = "cu124" },
]
torchvision = [
    { index = "pytorch-cpu", extra = "cpu" },
    { index = "pytorch-cu124", extra = "cu124" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["trackers"]

[tool.ruff]
target-version = "py39"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "yarn-error.log",
    "yarn.lock",
    "docs",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "I", "A", "Q", "W", "RUF"]
ignore = []
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
pylint.max-args = 5 # Default is 5

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 10.
max-complexity = 10

[tool.ruff.lint.isort]
order-by-type = true
no-sections = false

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
